{
    "pulumi-create-github-repository-import": {
        "prefix": ["pugri", "pulumi-create-github-repository-import", "pulumi-github-repository-import", "pulumi-github-repo-import", "pulumi-github-import"],
        "body": [
            "import * as github from \"@pulumi/github\";",
            "import * as pulumi from \"@pulumi/pulumi\";",
            "",
            "// Create a new GitHub repository",
            "const repo = new github.Repository($1, {",
            "    name: \"$2:new-repo\",",
            "    description: \"A new repository\",",
            "    private: true,",
            "    allowMergeCommit: true,",
            "    allowSquashMerge: true,",
            "    allowRebaseMerge: true,",
            "    deleteBranchOnMerge: true,",
            "    topics: [\"pulumi\", \"github\"],",
            "    hasDownloads: true,",
            "    hasIssues: true,",
            "    hasProjects: true,",
            "    hasWiki: true,",
            "    autoInit: true,",
            "    gitignoreTemplate: \"Node\",",
            "    licenseTemplate: \"mit\",",
            "    vulnerabilityAlerts: true,",
            "    organization: org,",
            "});",
        ],
        "description": "Create a new GitHub repository"
    },
    "pulumi-create-github-repository": {
        "prefix": ["pugr", "pulumi-create-github-repository", "pulumi-github-repository", "pulumi-github-repo", "pulumi-github"],
        "body": [
            "// Create a new GitHub repository",
            "const repo = new github.Repository($1, {",
            "    name: \"$2:repo-name\",",
            "    description: \"$0\",",
            "    private: true,",
            "    allowMergeCommit: true,",
            "    allowSquashMerge: true,",
            "    allowRebaseMerge: true,",
            "    deleteBranchOnMerge: true,",
            "    topics: [\"pulumi\", \"github\"],",
            "    hasDownloads: true,",
            "    hasIssues: true,",
            "    hasProjects: true,",
            "    hasWiki: true,",
            "    autoInit: true,",
            "    gitignoreTemplate: \"Node\",",
            "    licenseTemplate: \"mit\",",
            "    vulnerabilityAlerts: true,",
            "    organization: org,",
            "});",
        ],
        "description": "Create a new GitHub repository"
    },
    "pulumi-create-github-repository-collaborator-import": {
        "prefix": ["pugrci", "pulumi-create-github-repository-collaborator-import", "pulumi-github-repository-collaborator-import", "pulumi-github-repo-collaborator-import", "pulumi-github-collaborator-import"],
        "body": [
            "import * as github from \"@pulumi/github\";",
            "import * as pulumi from \"@pulumi/pulumi\";",
            "",
            "// Create a new GitHub repository collaborator",
            "const repoCollaborator = new github.RepositoryCollaborator(\"$1\", {",
            "    repository: $2.name,",
            "    username: \"$1\",",
            "    permission: \"$0\",",
            "}, { dependsOn: [$2] });",
        ],
        "description": "Create a new GitHub repository collaborator"
    },
    "pulumi-create-github-repository-collaborator": {
        "prefix": ["pugrc", "pulumi-create-github-repository-collaborator", "pulumi-github-repository-collaborator", "pulumi-github-repo-collaborator", "pulumi-github-collaborator"],
        "body": [
            "// Create a new GitHub repository collaborator",
            "const repoCollaborator = new github.RepositoryCollaborator(\"$1\", {",
            "    repository: $2.name,",
            "    username: \"$1\",",
            "    permission: \"$0\",",
            "}, { dependsOn: [$2] });",
        ],
        "description": "Create a new GitHub repository collaborator"
    },
    "pulumi-create-github-repository-branch-protection-import": {
        "prefix": ["pugrbpi", "pulumi-create-github-repository-branch-protection-import", "pulumi-github-repository-branch-protection-import", "pulumi-github-repo-branch-protection-import", "pulumi-github-branch-protection-import"],
        "body": [
            "import * as github from \"@pulumi/github\";",
            "import * as pulumi from \"@pulumi/pulumi\";",
            "",
            "// Create a new GitHub repository branch protection",
            "const repoBranchProtection = new github.BranchProtection(\"$1\", {",
            "    repository: $2.name,",
            "    branch: \"$1\",",
            "    enforceAdmins: true,",
            "    requiredStatusChecks: {",
            "        strict: true,",
            "        contexts: [\"continuous-integration/travis-ci\"]",
            "    },",
            "    requiredPullRequestReviews: {",
            "        dismissalRestrictions: {",
            "            users: [\"$1\"],",
            "            teams: [\"$1\"]",
            "        },",
            "        dismissStaleReviews: true,",
            "        requireCodeOwnerReviews: true,",
            "        requiredApprovingReviewCount: 1",
            "    },",
            "    restrictions: {",
            "        users: [\"$1\"],",
            "        teams: [\"$1\"],",
            "        apps: [\"$1\"]",
            "    }",
            "}, { dependsOn: [$2] });",
        ],
        "description": "Create a new GitHub repository branch protection"
    },
    "pulumi-create-github-repository-branch-protection": {
        "prefix": ["pugrbp", "pulumi-create-github-repository-branch-protection", "pulumi-github-repository-branch-protection", "pulumi-github-repo-branch-protection", "pulumi-github-branch-protection"],
        "body": [
            "// Create a new GitHub repository branch protection",
            "const repoBranchProtection = new github.BranchProtection(\"$1\", {",
            "    repository: $2.name,",
            "    branch: \"$1\",",
            "    enforceAdmins: true,",
            "    requiredStatusChecks: {",
            "        strict: true,",
            "        contexts: [\"continuous-integration/travis-ci\"]",
            "    },",
            "    requiredPullRequestReviews: {",
            "        dismissalRestrictions: {",
            "            users: [\"$1\"],",
            "            teams: [\"$1\"]",
            "        },",
            "        dismissStaleReviews: true,",
            "        requireCodeOwnerReviews: true,",
            "        requiredApprovingReviewCount: 1",
            "    },",
            "    restrictions: {",
            "        users: [\"$1\"],",
            "        teams: [\"$1\"],",
            "        apps: [\"$1\"]",
            "    }",
            "}, { dependsOn: [$2] });",
        ],
        "description": "Create a new GitHub repository branch protection"
    },
    "pulumi-get-user": {
        "prefix": ["pugu", "pulumi-get-user", "pulumi-user"],
        "body": [
            "// Get the specified user",
            "const user = github.getUser({username: \"$1\"});",
        ],
        "description": "Get the current user"
    },
}